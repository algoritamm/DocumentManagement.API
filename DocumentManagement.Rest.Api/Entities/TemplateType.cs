// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace DocumentManagement.Rest.Api.Entities;

[Table("TEMPLATE_TYPE", Schema = "algo")]
[Index("TemplateTypeNameLat", "TemplateTypeParentId", Name = "AK_TEMPLATE_TYPE", IsUnique = true)]
public partial class TemplateType
{
    [Key]
    [Column("TemplateTypeID")]
    public short TemplateTypeId { get; set; }

    [Required]
    [StringLength(75)]
    public string TemplateTypeNameCyr { get; set; }

    [Required]
    [StringLength(75)]
    public string TemplateTypeNameLat { get; set; }

    [Required]
    [StringLength(75)]
    public string TemplateTypeNameEng { get; set; }

    [Column("TemplateTypeParentID")]
    public short? TemplateTypeParentId { get; set; }

    [StringLength(255)]
    public string TemplateTypeDescription { get; set; }

    [Column("TemplateClassID")]
    public byte? TemplateClassId { get; set; }

    public bool IsEnabled { get; set; }

    [Required]
    [StringLength(50)]
    [Unicode(false)]
    public string InsertUser { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime InsertDate { get; set; }

    [StringLength(50)]
    [Unicode(false)]
    public string UpdateUser { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime? UpdateDate { get; set; }

    [StringLength(18)]
    [Unicode(false)]
    public string CaseBasicNumber { get; set; }

    [InverseProperty("TemplateType")]
    public virtual ICollection<Case> Cases { get; set; } = new List<Case>();

    [InverseProperty("TemplateTypeParent")]
    public virtual ICollection<TemplateType> InverseTemplateTypeParent { get; set; } = new List<TemplateType>();

    [ForeignKey("TemplateTypeParentId")]
    [InverseProperty("InverseTemplateTypeParent")]
    public virtual TemplateType TemplateTypeParent { get; set; }

    [InverseProperty("TemplateType")]
    public virtual ICollection<Template> Templates { get; set; } = new List<Template>();
}