// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace DocumentManagement.Rest.Api.Entities;

[Table("ROLE", Schema = "adm")]
[Index("RoleNameAd", Name = "AK_ROLE_2", IsUnique = true)]
[Index("RoleTypeId", Name = "FK_ROLE_RoleTypeID")]
[Index("RoleCode", Name = "IX_ROLE_1")]
public partial class Role
{
    [Key]
    [Column("RoleID")]
    public short RoleId { get; set; }

    [Required]
    [StringLength(4)]
    [Unicode(false)]
    public string RoleCode { get; set; }

    [Required]
    [Column("RoleNameAD")]
    [StringLength(100)]
    [Unicode(false)]
    public string RoleNameAd { get; set; }

    [Required]
    [StringLength(100)]
    public string RoleName { get; set; }

    [Required]
    [StringLength(255)]
    public string RoleDescription { get; set; }

    [StringLength(50)]
    [Unicode(false)]
    public string RoleEmail { get; set; }

    public bool IsToReceiveNotification { get; set; }

    [Column("RoleTypeID")]
    public byte RoleTypeId { get; set; }

    [Required]
    [StringLength(50)]
    [Unicode(false)]
    public string InsertUser { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime InsertDate { get; set; }

    [StringLength(50)]
    [Unicode(false)]
    public string UpdateUser { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime? UpdateDate { get; set; }

    [Column("RoleReportingParentID")]
    public short? RoleReportingParentId { get; set; }

    [InverseProperty("Role")]
    public virtual ICollection<AccountRole> AccountRoles { get; set; } = new List<AccountRole>();

    [InverseProperty("RoleLocated")]
    public virtual ICollection<Case> CaseRoleLocateds { get; set; } = new List<Case>();

    [InverseProperty("Role")]
    public virtual ICollection<Case> CaseRoles { get; set; } = new List<Case>();

    [InverseProperty("Role")]
    public virtual ICollection<CaseWorkflow> CaseWorkflows { get; set; } = new List<CaseWorkflow>();

    [InverseProperty("Role")]
    public virtual ICollection<ServiceDef> ServiceDefs { get; set; } = new List<ServiceDef>();

    [InverseProperty("Role")]
    public virtual ICollection<DocumentParticipantProcess> DocumentParticipantProcesses { get; set; } = new List<DocumentParticipantProcess>();
}