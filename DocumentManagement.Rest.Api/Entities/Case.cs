// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace DocumentManagement.Rest.Api.Entities;

[Table("CASE", Schema = "algo")]
[Index("CaseRefNo", Name = "AK_CASE", IsUnique = true)]
[Index("AccountId", Name = "FK_CASE_AccountID")]
[Index("AccountLocatedId", Name = "FK_CASE_AccountLocatedID")]
[Index("BussinesProcessStepId", Name = "FK_CASE_BussinesProcessStepID")]
[Index("CaseClassificationId", Name = "FK_CASE_CaseClassificationID")]
[Index("CaseStatusId", Name = "FK_CASE_CaseStatusID")]
[Index("RoleId", Name = "FK_CASE_RoleID")]
[Index("RoleLocatedId", Name = "FK_CASE_RoleLocatedID")]
[Index("RoleLocatedId", "CaseCreatedDate", "CaseStatusId", Name = "IX_CASE_1", IsDescending = new[] { false, true, false })]
[Index("CaseCreatedDate", "CaseStatusId", "RoleLocatedId", "AccountLocatedId", Name = "IX_CASE_2", IsDescending = new[] { true, false, false, false })]
public partial class Case
{
    [Key]
    [Column("CaseID")]
    public int CaseId { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime CaseCreatedDate { get; set; }

    [Required]
    [StringLength(4)]
    [Unicode(false)]
    public string CaseYear { get; set; }

    [Required]
    public string CaseRefNo { get; set; }

    [Required]
    [StringLength(150)]
    public string CaseTitle { get; set; }

    [Required]
    [StringLength(500)]
    public string CaseDescription { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime CaseResolutionDate { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime? CaseArchiveDate { get; set; }

    [Column("CaseStatusID")]
    public byte CaseStatusId { get; set; }

    [Required]
    [Column("CaseClassificationID")]
    [StringLength(10)]
    [Unicode(false)]
    public string CaseClassificationId { get; set; }

    [Column("RoleID")]
    public short RoleId { get; set; }

    [Column("AccountID")]
    public short AccountId { get; set; }

    [Column("RoleLocatedID")]
    public short? RoleLocatedId { get; set; }

    [Column("AccountLocatedID")]
    public short? AccountLocatedId { get; set; }

    [Column("BussinesProcessStepID")]
    public short? BussinesProcessStepId { get; set; }

    [StringLength(1000)]
    public string CaseComment { get; set; }

    [Column("CRMNumber")]
    [StringLength(30)]
    [Unicode(false)]
    public string Crmnumber { get; set; }

    [Column("TemplateTypeID")]
    public short TemplateTypeId { get; set; }

    [Required]
    [StringLength(50)]
    [Unicode(false)]
    public string InsertUser { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime InsertDate { get; set; }

    [StringLength(50)]
    [Unicode(false)]
    public string UpdateUser { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime? UpdateDate { get; set; }

    [ForeignKey("AccountId")]
    [InverseProperty("CaseAccounts")]
    public virtual Account Account { get; set; }

    [ForeignKey("AccountLocatedId")]
    [InverseProperty("CaseAccountLocateds")]
    public virtual Account AccountLocated { get; set; }

    [ForeignKey("BussinesProcessStepId")]
    [InverseProperty("Cases")]
    public virtual BusinessProcessStep BussinesProcessStep { get; set; }

    [InverseProperty("Case")]
    public virtual ICollection<CaseEntity> CaseEntities { get; set; } = new List<CaseEntity>();

    [InverseProperty("Case")]
    public virtual ICollection<CaseWorkflow> CaseWorkflows { get; set; } = new List<CaseWorkflow>();

    [InverseProperty("Case")]
    public virtual ICollection<Document> Documents { get; set; } = new List<Document>();

    [ForeignKey("RoleId")]
    [InverseProperty("CaseRoles")]
    public virtual Role Role { get; set; }

    [ForeignKey("RoleLocatedId")]
    [InverseProperty("CaseRoleLocateds")]
    public virtual Role RoleLocated { get; set; }

    [ForeignKey("TemplateTypeId")]
    [InverseProperty("Cases")]
    public virtual TemplateType TemplateType { get; set; }
}